{
  "x-sap-shortText": "Manage list categories for your configured SAP Concur lists.",
  "swagger": "2.0",
  "host": "www.concursolutions.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "info": {
    "title": "List Category",
    "description": "Provides an automated solution to clients who would like to manage list categories. This API provides methods to view, add, update or delete list categories.",
    "version": "4.0"
  },
  "tags": [
    {
      "name": "List Category API",
      "description": "List Category Controller"
    }
  ],
  "paths": {
    "/list/v4/categories": {
      "get": {
        "tags": [
          "List Category API"
        ],
        "summary": "Gets all categories for the given company.",
        "description": "Returns all categories",
        "operationId": "getAllCategoriesUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language code",
            "required": false,
            "type": "string",
            "default": "en"
          },
          {
            "name": "company-uuid",
            "in": "header",
            "description": "Company UUID of the user (Used for x509 authorization)",
            "required": false,
            "type": "string"
          },
          {
            "name": "concur-correlationid",
            "in": "header",
            "description": "The unique identifier of the consumer making the API calls. Minimum length: 6 characters",
            "required": false,
            "type": "string"
          },
          {
            "name": "concur-uid",
            "in": "header",
            "description": "Concur Employee UUID of the caller (Used for x509 authorization)",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number starting from 1",
            "required": false,
            "type": "integer",
            "default": 1,
            "format": "int32",
            "x-example": 1
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter capabilities for List Category type",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully get all categories",
            "schema": {
              "$ref": "#/definitions/PagedResourcesCategoryResponse"
            }
          },
          "400": {
            "description": "Entity does not exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "Access Denied",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "List category not found",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "List Category API"
        ],
        "summary": "Create a category with provided request body",
        "description": "Returns a new category",
        "operationId": "createCategoryUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "categoryRequest",
            "description": "List Category that is created for the company",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CategoryRequest"
            }
          },
          {
            "name": "company-uuid",
            "in": "header",
            "description": "Company UUID of the user (Used for x509 authorization)",
            "required": false,
            "type": "string"
          },
          {
            "name": "concur-correlationid",
            "in": "header",
            "description": "The unique identifier of the consumer making the API calls. Minimum length: 6 characters",
            "required": false,
            "type": "string"
          },
          {
            "name": "concur-uid",
            "in": "header",
            "description": "Concur Employee UUID of the caller (Used for x509 authorization)",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created a category",
            "schema": {
              "$ref": "#/definitions/CategoryResponse"
            }
          },
          "400": {
            "description": "Entity does not exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "Access Denied",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "415": {
            "description": "The specified media type is not supported",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "The list category could not be created",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          }
        ],
        "deprecated": false
      }
    },
    "/list/v4/categories/{categoryId}": {
      "get": {
        "tags": [
          "List Category API"
        ],
        "summary": "Get a list category with provided id",
        "description": "Returns an existing category",
        "operationId": "getListCategoryUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language code",
            "required": false,
            "type": "string",
            "default": "en"
          },
          {
            "name": "categoryId",
            "in": "path",
            "description": "The unique identifier of the category",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "company-uuid",
            "in": "header",
            "description": "Company UUID of the user (Used for x509 authorization)",
            "required": false,
            "type": "string"
          },
          {
            "name": "concur-correlationid",
            "in": "header",
            "description": "The unique identifier of the consumer making the API calls. Minimum length: 6 characters",
            "required": false,
            "type": "string"
          },
          {
            "name": "concur-uid",
            "in": "header",
            "description": "Concur Employee UUID of the caller (Used for x509 authorization)",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully get list category",
            "schema": {
              "$ref": "#/definitions/CategoryResponse"
            }
          },
          "400": {
            "description": "Entity does not exist",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "Access Denied",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "List category not found",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "List Category API"
        ],
        "summary": "Updates the specified category with provided request body",
        "description": "Returns an updated category",
        "operationId": "updateCategoryUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language code",
            "required": false,
            "type": "string",
            "default": "en"
          },
          {
            "name": "categoryId",
            "in": "path",
            "description": "The unique identifier of the category",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "categoryRequest",
            "description": "List Category that is updated for the company",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CategoryRequest"
            }
          },
          {
            "name": "company-uuid",
            "in": "header",
            "description": "Company UUID of the user (Used for x509 authorization)",
            "required": false,
            "type": "string"
          },
          {
            "name": "concur-correlationid",
            "in": "header",
            "description": "The unique identifier of the consumer making the API calls. Minimum length: 6 characters",
            "required": false,
            "type": "string"
          },
          {
            "name": "concur-uid",
            "in": "header",
            "description": "Concur Employee UUID of the caller (Used for x509 authorization)",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the list category",
            "schema": {
              "$ref": "#/definitions/CategoryResponse"
            }
          },
          "400": {
            "description": "This List Category name is already in use",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "Access Denied",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "List category not found",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "415": {
            "description": "The specified media type is not supported",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "List category not updated",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "List Category API"
        ],
        "summary": "Delete a list category",
        "description": "Deletes list category",
        "operationId": "deleteListCategoryUsingDELETE",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "The unique identifier of the category",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "company-uuid",
            "in": "header",
            "description": "Company UUID of the user (Used for x509 authorization)",
            "required": false,
            "type": "string"
          },
          {
            "name": "concur-correlationid",
            "in": "header",
            "description": "The unique identifier of the consumer making the API calls. Minimum length: 6 characters",
            "required": false,
            "type": "string"
          },
          {
            "name": "concur-uid",
            "in": "header",
            "description": "Concur Employee UUID of the caller (Used for x509 authorization)",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted list category"
          },
          "400": {
            "description": "There are list associated with the list category",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "Access Denied",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          }
        ],
        "deprecated": false
      }
    }
  },
  "securityDefinitions": {
    "JWT Token": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "definitions": {
    "CategoryRequest": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "List category value"
        }
      },
      "title": "CategoryRequest"
    },
    "CategoryResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "description": "The unique identifier of the list category"
        },
        "value": {
          "type": "string",
          "description": "List category value"
        },
        "type": {
          "type": "string",
          "description": "List category type"
        },
        "isSystemRecord": {
          "type": "boolean",
          "description": "Whether the list category is a system record"
        },
        "isDeleted": {
          "type": "boolean",
          "description": "Whether the list category has been deleted"
        },
        "isReadOnly": {
          "type": "boolean",
          "description": "Whether the list category is read only"
        }
      },
      "title": "CategoryResponse"
    },
    "ErrorMessage": {
      "type": "object",
      "required": [
        "error",
        "httpStatus",
        "path",
        "timestamp"
      ],
      "properties": {
        "error": {
          "$ref": "#/definitions/Message"
        },
        "httpStatus": {
          "type": "string",
          "description": "The http response code and phrase for the response"
        },
        "path": {
          "type": "string",
          "description": "The URI of the attempted request"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "example": "2016-10-04T00:53:25.931+0000",
          "description": "The time when the error was captured"
        },
        "validationErrors": {
          "type": "array",
          "description": "The validation error messages",
          "items": {
            "$ref": "#/definitions/ValidationError"
          }
        }
      },
      "title": "ErrorMessage"
    },
    "Link": {
      "type": "object",
      "properties": {
        "deprecation": {
          "type": "string",
          "xml": {
            "name": "deprecation",
            "attribute": true,
            "wrapped": false
          }
        },
        "href": {
          "type": "string",
          "xml": {
            "name": "href",
            "attribute": true,
            "wrapped": false
          }
        },
        "hreflang": {
          "type": "string",
          "xml": {
            "name": "hreflang",
            "attribute": true,
            "wrapped": false
          }
        },
        "media": {
          "type": "string",
          "xml": {
            "name": "media",
            "attribute": true,
            "wrapped": false
          }
        },
        "rel": {
          "type": "string",
          "xml": {
            "name": "rel",
            "attribute": true,
            "wrapped": false
          }
        },
        "templated": {
          "type": "boolean"
        },
        "title": {
          "type": "string",
          "xml": {
            "name": "title",
            "attribute": true,
            "wrapped": false
          }
        },
        "type": {
          "type": "string",
          "xml": {
            "name": "type",
            "attribute": true,
            "wrapped": false
          }
        }
      },
      "title": "Link"
    },
    "Message": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier of the error associated with the response or is it error response itself"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "Message"
    },
    "PageMetadata": {
      "type": "object",
      "properties": {
        "number": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "name": "number",
            "attribute": true,
            "wrapped": false
          }
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "name": "size",
            "attribute": true,
            "wrapped": false
          }
        },
        "totalElements": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "name": "totalElements",
            "attribute": true,
            "wrapped": false
          }
        },
        "totalPages": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "name": "totalPages",
            "attribute": true,
            "wrapped": false
          }
        }
      },
      "title": "PageMetadata"
    },
    "PagedResourcesCategoryResponse": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryResponse"
          }
        },
        "links": {
          "type": "array",
          "xml": {
            "name": "link",
            "namespace": "http://www.w3.org/2005/Atom",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "page": {
          "$ref": "#/definitions/PageMetadata"
        }
      },
      "title": "PagedResourcesCategoryResponse",
      "xml": {
        "name": "pagedEntities",
        "attribute": false,
        "wrapped": false
      }
    },
    "ValidationError": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "The detailed message of the validation error"
        },
        "source": {
          "type": "string",
          "description": "The type of validation which failed"
        }
      },
      "title": "ValidationError"
    }
  },
  "x-servers": [
    {
      "url": "https://www.concursolutions.com/api/v4.0",
      "description": "Concur API EndPoint"
    }
  ]
}